{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Projects\\\\Resume-Analyizer\\\\frontend\\\\src\\\\components\\\\ResumeUpload.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/ResumeUpload.js\nimport React, { useState } from 'react';\nimport { uploadResume } from '../api';\nimport ResumeDetails from './ResumeDetails';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ResumeUpload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n    setAnalysisResult(null);\n    setError('');\n    setSuccessMessage('');\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      setError('Please select a resume PDF file to upload.');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setSuccessMessage('');\n    setAnalysisResult(null);\n    try {\n      const response = await uploadResume(selectedFile);\n      setAnalysisResult(response.data.data.extracted_data);\n      setSuccessMessage(response.data.message);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error uploading resume:', err);\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to upload and analyze resume. Please try again.';\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resume-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Resume for Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf\",\n      onChange: handleFileChange,\n      className: \"input-file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      className: \"button\",\n      disabled: loading,\n      children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Analyzing... \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true) : 'Analyze Resume'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 23\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 32\n    }, this), analysisResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analysis-results\",\n      children: /*#__PURE__*/_jsxDEV(ResumeDetails, {\n        data: analysisResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(ResumeUpload, \"xuk8fELHEdPOQUur9XHOVMXF1WM=\");\n_c = ResumeUpload;\nexport default ResumeUpload;\nvar _c;\n$RefreshReg$(_c, \"ResumeUpload\");","map":{"version":3,"names":["React","useState","uploadResume","ResumeDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","ResumeUpload","_s","selectedFile","setSelectedFile","analysisResult","setAnalysisResult","loading","setLoading","error","setError","successMessage","setSuccessMessage","handleFileChange","event","target","files","handleUpload","response","data","extracted_data","message","err","_err$response","_err$response$data","console","errorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["D:/React-Projects/Resume-Analyizer/frontend/src/components/ResumeUpload.js"],"sourcesContent":["// frontend/src/components/ResumeUpload.js\r\nimport React, { useState } from 'react';\r\nimport { uploadResume } from '../api';\r\nimport ResumeDetails from './ResumeDetails';\r\n\r\nconst ResumeUpload = () => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [analysisResult, setAnalysisResult] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n    const handleFileChange = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n        setAnalysisResult(null);\r\n        setError('');\r\n        setSuccessMessage('');\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!selectedFile) {\r\n            setError('Please select a resume PDF file to upload.');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setError('');\r\n        setSuccessMessage('');\r\n        setAnalysisResult(null);\r\n\r\n        try {\r\n            const response = await uploadResume(selectedFile);\r\n            setAnalysisResult(response.data.data.extracted_data);\r\n            setSuccessMessage(response.data.message);\r\n        } catch (err) {\r\n            console.error('Error uploading resume:', err);\r\n            const errorMessage = err.response?.data?.message || 'Failed to upload and analyze resume. Please try again.';\r\n            setError(errorMessage);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"resume-upload-container\">\r\n            <h2>Upload Resume for Analysis</h2>\r\n            <input\r\n                type=\"file\"\r\n                accept=\".pdf\"\r\n                onChange={handleFileChange}\r\n                className=\"input-file\"\r\n            />\r\n            <button onClick={handleUpload} className=\"button\" disabled={loading}>\r\n                {loading ? (\r\n                    <>\r\n                        Analyzing... <span className=\"loading-spinner\"></span>\r\n                    </>\r\n                ) : (\r\n                    'Analyze Resume'\r\n                )}\r\n            </button>\r\n\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n            {successMessage && <div className=\"success-message\">{successMessage}</div>}\r\n\r\n            {analysisResult && (\r\n                <div className=\"analysis-results\">\r\n                    <ResumeDetails data={analysisResult} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResumeUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}